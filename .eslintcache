[{"/workspace/WebProject/uber_eats/uber_eats_frontend/src/index.tsx":"1","/workspace/WebProject/uber_eats/uber_eats_frontend/src/reportWebVitals.ts":"2","/workspace/WebProject/uber_eats/uber_eats_frontend/src/apollo.ts":"3","/workspace/WebProject/uber_eats/uber_eats_frontend/src/routers/logged-out-router.tsx":"4","/workspace/WebProject/uber_eats/uber_eats_frontend/src/routers/logged-in-router.tsx":"5","/workspace/WebProject/uber_eats/uber_eats_frontend/src/pages/create-account.tsx":"6","/workspace/WebProject/uber_eats/uber_eats_frontend/src/pages/login.tsx":"7","/workspace/WebProject/uber_eats/uber_eats_frontend/src/components/form-error.tsx":"8","/workspace/WebProject/uber_eats/uber_eats_frontend/src/components/button.tsx":"9","/workspace/WebProject/uber_eats/uber_eats_frontend/src/constants.ts":"10","/workspace/WebProject/uber_eats/uber_eats_frontend/src/pages/client/restaurants.tsx":"11","/workspace/WebProject/uber_eats/uber_eats_frontend/src/pages/404.tsx":"12","/workspace/WebProject/uber_eats/uber_eats_frontend/src/components/header.tsx":"13","/workspace/WebProject/uber_eats/uber_eats_frontend/src/hooks/useMe.tsx":"14","/workspace/WebProject/uber_eats/uber_eats_frontend/src/pages/user/confirm-email.tsx":"15","/workspace/WebProject/uber_eats/uber_eats_frontend/src/pages/user/edit-profile.tsx":"16","/workspace/WebProject/uber_eats/uber_eats_frontend/src/components/restaurant.tsx":"17","/workspace/WebProject/uber_eats/uber_eats_frontend/src/pages/client/search.tsx":"18","/workspace/WebProject/uber_eats/uber_eats_frontend/src/fragments.ts":"19","/workspace/WebProject/uber_eats/uber_eats_frontend/src/pages/client/category.tsx":"20","/workspace/WebProject/uber_eats/uber_eats_frontend/src/pages/client/restaurant-detail.tsx":"21","/workspace/WebProject/uber_eats/uber_eats_frontend/src/components/app.tsx":"22","/workspace/WebProject/uber_eats/uber_eats_frontend/src/pages/owner/my-restaurants.tsx":"23","/workspace/WebProject/uber_eats/uber_eats_frontend/src/pages/owner/add-restaurants.tsx":"24","/workspace/WebProject/uber_eats/uber_eats_frontend/src/pages/owner/my-restaurant.tsx":"25","/workspace/WebProject/uber_eats/uber_eats_frontend/src/pages/owner/add-dish.tsx":"26","/workspace/WebProject/uber_eats/uber_eats_frontend/src/components/dish.tsx":"27","/workspace/WebProject/uber_eats/uber_eats_frontend/src/components/dish-option.tsx":"28","/workspace/WebProject/uber_eats/uber_eats_frontend/src/pages/order.tsx":"29","/workspace/WebProject/uber_eats/uber_eats_frontend/src/pages/driver/dashboard.tsx":"30"},{"size":803,"mtime":1612055399445,"results":"31","hashOfConfig":"32"},{"size":425,"mtime":1611138402212,"results":"33","hashOfConfig":"32"},{"size":1458,"mtime":1613092001259,"results":"34","hashOfConfig":"32"},{"size":514,"mtime":1611413771406,"results":"35","hashOfConfig":"32"},{"size":3448,"mtime":1613125957394,"results":"36","hashOfConfig":"32"},{"size":4683,"mtime":1612444972035,"results":"37","hashOfConfig":"32"},{"size":3288,"mtime":1612177099403,"results":"38","hashOfConfig":"32"},{"size":239,"mtime":1612348962359,"results":"39","hashOfConfig":"32"},{"size":472,"mtime":1612176572143,"results":"40","hashOfConfig":"32"},{"size":47,"mtime":1611407822521,"results":"41","hashOfConfig":"32"},{"size":5104,"mtime":1611994833252,"results":"42","hashOfConfig":"32"},{"size":561,"mtime":1611988586507,"results":"43","hashOfConfig":"32"},{"size":940,"mtime":1611581984871,"results":"44","hashOfConfig":"32"},{"size":268,"mtime":1611495585208,"results":"45","hashOfConfig":"32"},{"size":1846,"mtime":1611497360181,"results":"46","hashOfConfig":"32"},{"size":2848,"mtime":1612672743994,"results":"47","hashOfConfig":"32"},{"size":731,"mtime":1612016158995,"results":"48","hashOfConfig":"32"},{"size":1900,"mtime":1612005725393,"results":"49","hashOfConfig":"32"},{"size":829,"mtime":1613055262965,"results":"50","hashOfConfig":"32"},{"size":1740,"mtime":1613051560442,"results":"51","hashOfConfig":"32"},{"size":8037,"mtime":1613050822274,"results":"52","hashOfConfig":"32"},{"size":396,"mtime":1612055359505,"results":"53","hashOfConfig":"32"},{"size":1553,"mtime":1612657736654,"results":"54","hashOfConfig":"32"},{"size":5335,"mtime":1612657697870,"results":"55","hashOfConfig":"32"},{"size":5597,"mtime":1613111329048,"results":"56","hashOfConfig":"32"},{"size":5638,"mtime":1612709744938,"results":"57","hashOfConfig":"32"},{"size":1684,"mtime":1613050391685,"results":"58","hashOfConfig":"32"},{"size":887,"mtime":1613022277132,"results":"59","hashOfConfig":"32"},{"size":4891,"mtime":1613226779020,"results":"60","hashOfConfig":"32"},{"size":4949,"mtime":1613180682232,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"12sy8yy",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"64"},"/workspace/WebProject/uber_eats/uber_eats_frontend/src/index.tsx",[],["133","134"],"/workspace/WebProject/uber_eats/uber_eats_frontend/src/reportWebVitals.ts",[],"/workspace/WebProject/uber_eats/uber_eats_frontend/src/apollo.ts",[],"/workspace/WebProject/uber_eats/uber_eats_frontend/src/routers/logged-out-router.tsx",[],"/workspace/WebProject/uber_eats/uber_eats_frontend/src/routers/logged-in-router.tsx",["135","136"],"import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Header } from '../components/header';\nimport { Restaurants } from '../pages/client/restaurants';\nimport { useMe } from '../hooks/useMe';\nimport { NotFound } from '../pages/404';\nimport { ConfirmEmail } from '../pages/user/confirm-email';\nimport { EditProfile } from '../pages/user/edit-profile';\nimport { Search } from '../pages/client/search';\nimport { Category } from '../pages/client/category';\nimport { RestaurantDetail } from '../pages/client/restaurant-detail';\nimport { MyRestaurants } from '../pages/owner/my-restaurants';\nimport { MyRestaurant } from '../pages/owner/my-restaurant';\nimport { AddRestaurant } from '../pages/owner/add-restaurants';\nimport { AddDish } from '../pages/owner/add-dish';\nimport { Order } from '../pages/order';\nimport { Dashboard } from '../pages/driver/dashboard';\nimport { UserRole } from '../__generated__/globalTypes';\n\nconst clientRoutes = [\n    {\n        path: '/',\n        component: <Restaurants />,\n    },\n    {\n        path: '/search',\n        component: <Search />,\n    },\n    {\n        path: '/category/:slug',\n        component: <Category />,\n    },\n    {\n        path: '/restaurants/:id',\n        component: <RestaurantDetail />,\n    },\n];\n\nconst commonRoutes = [\n    { path: '/confirm', component: <ConfirmEmail /> },\n    { path: '/edit-profile', component: <EditProfile /> },\n\t{ path: '/orders/:id', component: <Order /> },\n];\n\nconst restaurantRoutes = [\n\t{ path: '/', component: <MyRestaurants /> },\n\t{ path: '/add-restaurant', component: <AddRestaurant /> },\n\t{ path: '/restaurants/:id', component: <MyRestaurant /> },\n\t{ path: '/restaurants/:id/add-dish', component: <AddDish /> },\n];\n\nconst driverRoutes = [\n\t{ path: '/', component: <Dashboard /> },\n];\n\nexport const LoggedInRouter = () => {\n    const { data, loading, error } = useMe();\n\tconst [ test, setTest ] = useState(false);\n    if (!data || loading || error) {\n        return (\n            <div className=\"h-screen flex justify-center items-center\">\n                <span className=\"font-meidum text-xl tracking-wide\">Loading...</span>\n            </div>\n        );\n    }\n\n    return (\n        <Router>\n            <Header />\n            <Switch>\n                {data.me.role === UserRole.Client &&\n                    clientRoutes.map((route) => (\n                        <Route exact key={route.path} path={route.path}>\n                            {route.component}\n                        </Route>\n                    ))}\n                {data.me.role === UserRole.Owner &&\n                    restaurantRoutes.map((route) => (\n                        <Route exact key={route.path} path={route.path}>\n                            {route.component}\n                        </Route>\n                    ))}\n\t\t\t\t{data.me.role === UserRole.Delivery &&\n                    driverRoutes.map((route) => (\n                        <Route exact key={route.path} path={route.path}>\n                            {route.component}\n                        </Route>\n                    ))}\n                {commonRoutes.map((route) => (\n                    <Route key={route.path} path={route.path}>\n                        {route.component}\n                    </Route>\n                ))}\n                <Route>\n                    <NotFound />\n                </Route>\n            </Switch>\n        </Router>\n    );\n};","/workspace/WebProject/uber_eats/uber_eats_frontend/src/pages/create-account.tsx",[],"/workspace/WebProject/uber_eats/uber_eats_frontend/src/pages/login.tsx",[],"/workspace/WebProject/uber_eats/uber_eats_frontend/src/components/form-error.tsx",[],"/workspace/WebProject/uber_eats/uber_eats_frontend/src/components/button.tsx",["137"],"import React from \"react\";\n\ninterface IButtonProps {\n\tcanClick: boolean;\n\tloading: boolean;\n\tactionText: string;\n}\n\nexport const Button: React.FC<IButtonProps> = ({\n\tcanClick,\n\tloading,\n\tactionText,\n}) => (\n\t<button\n\t\trole=\"button\"\n\t\tclassName={`text-lg font-medium focus:outline-none text-white py-4 transition-colors ${\n\t\tcanClick\n\t\t\t? \"bg-lime-500 hover:bg-lime-600\"\n\t\t\t: \"bg-gray-300 pointer-events-none\"\n\t\t}`}\n\t>\n\t\t{loading ? \"Loading...\" : actionText}\n  </button>\n);","/workspace/WebProject/uber_eats/uber_eats_frontend/src/constants.ts",[],"/workspace/WebProject/uber_eats/uber_eats_frontend/src/pages/client/restaurants.tsx",["138"],"import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Helmet } from 'react-helmet-async';\nimport { useHistory, Link } from 'react-router-dom';\nimport { gql, useQuery } from '@apollo/client';\nimport {\n    restaurantsPageQuery,\n    restaurantsPageQueryVariables,\n} from '../../__generated__/restaurantsPageQuery';\nimport { Restaurant } from '../../components/restaurant';\nimport { CATEGORY_FRAGMENT ,RESTAURANT_FRAGMENT } from '../../fragments';\n\nconst RESTAURANT_QUERY = gql`\n\tquery restaurantsPageQuery($input: RestaurantsInput!) {\n\t\tallCategories {\n\t\t\tok\n\t\t\terror\n\t\t\tcategories {\n\t\t\t\t...CategoryParts\n\t\t\t}\n\t\t}\n\t\trestaurants(input: $input) {\n\t\t\tok\n\t\t\terror\n\t\t\ttotalPages\n\t\t\ttotalResults\n\t\t\tresults {\n\t\t\t\t...RestaurantParts\n\t\t\t}\n\t\t}\n\t}\n\t${RESTAURANT_FRAGMENT}\n\t${CATEGORY_FRAGMENT}\n`;\n\ninterface IFormProps {\n    searchTerm: string;\n}\n\nexport const Restaurants = () => {\n    const [page, setPage] = useState(1);\n    const { data, loading, error } = useQuery<restaurantsPageQuery, restaurantsPageQueryVariables>(\n        RESTAURANT_QUERY,\n        {\n            variables: {\n                input: {\n                    page,\n                },\n            },\n        }\n    );\n    const onNextPageClick = () => setPage((current) => current + 1);\n    const onPrevPageClick = () => setPage((current) => current - 1);\n    const { register, handleSubmit, getValues } = useForm<IFormProps>();\n    const history = useHistory();\n    const onSearchSubmit = () => {\n        const { searchTerm } = getValues();\n        history.push({\n            pathname: '/search',\n            search: `?term=${searchTerm}`,\n        });\n    };\n    return (\n        <div>\n            <Helmet>\n                <title>Home | Uber Eats</title>\n            </Helmet>\n            <form\n                onSubmit={handleSubmit(onSearchSubmit)}\n                className=\"bg-gray-800 w-full py-40 flex items-center justify-center\"\n            >\n                <input\n                    ref={register({ required: true, min: 3 })}\n                    type=\"Search\"\n                    name=\"searchTerm\"\n                    className=\"input rounded-md border-0 w-3/4 md:w-3/12\"\n                    placeholder=\"Search restaurants...\"\n                />\n            </form>\n            {!loading && (\n                <div className=\"max-w-screen-2xl pb-20 mx-auto mt-8\">\n                    <div className=\"flex justify-around max-w-sm mx-auto\">\n                        {data?.allCategories.categories?.map((category) => (\n                            <Link key={category.id} to={`/category/${category.slug}`}>\n                                <div className=\"flex flex-col group items-center cursor-pointer mx-5\">\n                                    <div\n                                        className=\"w-16 h-16 bg-cover group-hover:bg-gray-100 rounded-full\"\n                                        style={{ backgroundImage: `url(${category.coverImg})` }}\n                                    ></div>\n                                    <span className=\"mt-1 text-sm text-center font-medium\">\n                                        {category.name}\n                                    </span>\n                                </div>\n                            </Link>\n                        ))}\n                    </div>\n                    <div className=\"grid mt-16 md:grid-cols-3 gap-x-5 gap-y-10\">\n                        {data?.restaurants.results?.map((restaurant) => (\n                            <Restaurant\n                                key={restaurant.id}\n                                id={restaurant.id + ''}\n                                coverImg={restaurant.coverImg}\n                                name={restaurant.name}\n                                categoryName={restaurant.category?.name}\n                            />\n                        ))}\n                    </div>\n                    <div className=\"grid grid-cols-3 text-center max-w-md items-center mx-auto mt-10\">\n                        {page > 1 ? (\n                            <button\n                                onClick={onPrevPageClick}\n                                className=\"focus: outline-none font-medium text-2xl\"\n                            >\n                                &larr;\n                            </button>\n                        ) : (\n                            <div></div>\n                        )}\n                        <span>\n                            Page {page} of {data?.restaurants.totalPages}\n                        </span>\n                        {page !== data?.restaurants.totalPages ? (\n                            <button\n                                onClick={onNextPageClick}\n                                className=\"focus:outline-none font-medium text-2xl\"\n                            >\n                                &rarr;\n                            </button>\n                        ) : (\n                            <div></div>\n                        )}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};","/workspace/WebProject/uber_eats/uber_eats_frontend/src/pages/404.tsx",[],"/workspace/WebProject/uber_eats/uber_eats_frontend/src/components/header.tsx",[],"/workspace/WebProject/uber_eats/uber_eats_frontend/src/hooks/useMe.tsx",[],"/workspace/WebProject/uber_eats/uber_eats_frontend/src/pages/user/confirm-email.tsx",["139"],"import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport { gql, useApolloClient, useMutation } from '@apollo/client';\nimport { verifyEmail, verifyEmailVariables } from '../../__generated__/verifyEmail';\nimport { useMe } from '../../hooks/useMe';\n\nconst VERIFY_EMAIL_MUTATION = gql`\n\tmutation verifyEmail($input: VerifyEmailInput!) {\n\t\tverifyEmail(input: $input) {\n\t\t\tok\n\t\t\terror\n\t\t}\n\t}\n`;\n\nexport const ConfirmEmail = () => {\n    const { data: userData } = useMe();\n    const client = useApolloClient();\n    const history = useHistory();\n    const onCompleted = (data: verifyEmail) => {\n        const {\n            verifyEmail: { ok },\n        } = data;\n        if (ok && userData?.me.id) {\n            client.writeFragment({\n                id: `User:${userData.me.id}`,\n                fragment: gql`\n\t\t\t\t\tfragment VerifiedUser on User {\n\t\t\t\t\t\tverified\n\t\t\t\t\t}\n\t\t\t\t`,\n                data: {\n                    verified: true,\n                },\n            });\n            history.push('/');\n        }\n    };\n    const [verifyEmail] = useMutation<verifyEmail, verifyEmailVariables>(VERIFY_EMAIL_MUTATION, {\n        onCompleted,\n    });\n    useEffect(() => {\n        const [_, code] = window.location.href.split('code=');\n        verifyEmail({\n            variables: {\n                input: {\n                    code,\n                },\n            },\n        });\n    }, [verifyEmail]);\n    return (\n        <div className=\"mt-52 flex flex-col items-center justify-center\">\n            <Helmet>\n                <title>Verify Email | Nuber Eats</title>\n            </Helmet>\n            <h2 className=\"text-lg font-medium\">Confirming email...</h2>\n            <h4 className=\"text-gray-700 text-sm\">Please wait, dont' close this page...</h4>\n        </div>\n    );\n};","/workspace/WebProject/uber_eats/uber_eats_frontend/src/pages/user/edit-profile.tsx",[],"/workspace/WebProject/uber_eats/uber_eats_frontend/src/components/restaurant.tsx",[],"/workspace/WebProject/uber_eats/uber_eats_frontend/src/pages/client/search.tsx",["140","141","142"],"import React, { useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { gql, useLazyQuery } from '@apollo/client';\nimport { RESTAURANT_FRAGMENT } from '../../fragments';\nimport { searchRestaurant, searchRestaurantVariables } from '../../__generated__/searchRestaurant';\nimport { Restaurant } from '../../components/restaurant';\n\nconst SEARCH_RESTAURANT = gql`\n\tquery searchRestaurant($input: SearchRestaurantInput!) {\n\t\tsearchRestaurant(input: $input) {\n\t\t\tok\n\t\t\terror\n\t\t\ttotalPages\n\t\t\ttotalResults\n\t\t\trestaurants {\n\t\t\t\t...RestaurantParts\n\t\t\t}\n\t\t}\n\t}\n\t${RESTAURANT_FRAGMENT}\n`;\n\nexport const Search = () => {\n\tconst location = useLocation();\n\tconst history = useHistory();\n\tconst [page, setPage] = useState(1);\n\tconst [callQuery, { loading, data, called }] = useLazyQuery<\n\t\tsearchRestaurant,\n\t\tsearchRestaurantVariables\n\t>(SEARCH_RESTAURANT);\n\tuseEffect(() => {\n\t\tconst [_, query] = location.search.split(\"?term=\");\n\t\tif(!query) {\n\t\t\treturn history.replace(\"/\");\n\t\t}\n\t\tcallQuery({\n\t\t\tvariables: {\n\t\t\t\tinput: {\n\t\t\t\t\tpage,\n\t\t\t\t\tquery,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}, [history, location]);\n\tconsole.log(loading, data, called);\n\treturn (\n\t\t<div>\n\t\t\t<Helmet>\n\t\t\t\t<title>Search | Uber Eats</title>\n\t\t\t</Helmet>\n\t\t\t{!loading && (\n\t\t\t\t<div className=\"max-w-screen-2xl pb-20 mx-auto mt-8\">\n\t\t\t\t\t<div className=\"grid mt-16 md:grid-cols-3 gap-x-5 gap-y-10\">\n\t\t\t\t\t\t{data?.searchRestaurant.restaurants?.map((restaurant) => (\n\t\t\t\t\t\t\t <Restaurant\n                                key={restaurant.id}\n                                id={restaurant.id + ''}\n                                coverImg={restaurant.coverImg}\n                                name={restaurant.name}\n                                categoryName={restaurant.category?.name}\n                            />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}","/workspace/WebProject/uber_eats/uber_eats_frontend/src/fragments.ts",[],"/workspace/WebProject/uber_eats/uber_eats_frontend/src/pages/client/category.tsx",["143"],"import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { gql, useQuery } from '@apollo/client';\nimport { CATEGORY_FRAGMENT, RESTAURANT_FRAGMENT } from '../../fragments';\nimport { category, categoryVariables } from '../../__generated__/category';\nimport { Restaurant } from '../../components/restaurant';\n\nconst CATEGORY_QUERY = gql`\n\tquery category($input: CategoryInput!) {\n\t\tcategory(input: $input) {\n\t\t\tok\n\t\t\terror\n\t\t\ttotalPages\n\t\t\ttotalResults\n\t\t\trestaurants {\n\t\t\t\t...RestaurantParts\n\t\t\t}\n\t\t\tcategory {\n\t\t\t\t...CategoryParts\n\t\t\t}\n\t\t}\n\t}\n\t${RESTAURANT_FRAGMENT}\n\t${CATEGORY_FRAGMENT}\n`;\n\ninterface ICategoryParams {\n    slug: string;\n}\n\nexport const Category = () => {\n    const params = useParams();\n    const { data, loading } = useQuery<category, categoryVariables>(CATEGORY_QUERY, {\n        variables: {\n            input: {\n                page: 1,\n                slug: params.slug,\n            },\n        },\n    });\n    console.log(data);\n    return (\n        <div>\n            {!loading && (\n                <div className=\"max-w-screen-2xl pb-20 mx-auto mt-8\">\n                    <div className=\"grid mt-16 md:grid-cols-3 gap-x-5 gap-y-10\">\n                        {data?.category.restaurants?.map((restaurant) => (\n                            <Restaurant\n                                key={restaurant.id}\n                                id={restaurant.id + ''}\n                                coverImg={restaurant.coverImg}\n                                name={restaurant.name}\n                                categoryName={restaurant.category?.name}\n                            />\n                        ))}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};","/workspace/WebProject/uber_eats/uber_eats_frontend/src/pages/client/restaurant-detail.tsx",["144","145","146"],"import React, { useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { gql, useQuery, useMutation } from '@apollo/client';\nimport { DISH_FRAGMENT, RESTAURANT_FRAGMENT } from '../../fragments';\nimport { restaurant, restaurantVariables } from '../../__generated__/restaurant';\nimport { createOrder, createOrderVariables } from '../../__generated__/createOrder';\nimport { CreateOrderItemInput } from '../../__generated__/globalTypes';\nimport { Dish } from '../../components/dish';\nimport { DishOption } from '../../components/dish-option';\n\nconst RESTAURANT_QUERY = gql`\n\tquery restaurant($input: RestaurantInput!) {\n\t\trestaurant(input: $input) {\n\t\t\tok\n\t\t\terror\n\t\t\trestaurant {\n\t\t\t\t...RestaurantParts\n\t\t\t\tmenu {\n\t\t\t\t\t...DishParts\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t${RESTAURANT_FRAGMENT}\n\t${DISH_FRAGMENT}\n`;\n\nconst CREATE_ORDER_MUTATION = gql`\n\tmutation createOrder($input: CreateOrderInput!) {\n\t\tcreateOrder(input: $input) {\n\t\t\tok\n\t\t\terror\n\t\t\torderId\n\t\t}\n\t}\n`;\n\ninterface IRestaurantParams {\n    id: string;\n}\n\nexport const RestaurantDetail = () => {\n    const params = useParams();\n\tconsole.log(params);\n    const { loading, data } = useQuery<restaurant, restaurantVariables>(RESTAURANT_QUERY, {\n        variables: {\n            input: {\n                restaurantId: +params.id,\n            },\n        },\n    });\n    const [orderStarted, setOrderStarted] = useState(false);\n    const [orderItems, setOrderItems] = useState<CreateOrderItemInput[]>([]);\n    const triggerStartOrder = () => {\n        setOrderStarted(true);\n    };\n    const getItem = (dishId: number) => {\n        return orderItems.find((order) => order.dishId === dishId);\n    };\n    const isSelected = (dishId: number) => {\n        return Boolean(getItem(dishId));\n    };\n    const addItemToOrder = (dishId: number) => {\n        if (isSelected(dishId)) {\n            return;\n        }\n        setOrderItems((current) => [{ dishId, options: [] }, ...current]);\n    };\n    const removeFromOrder = (dishId: number) => {\n        setOrderItems((current) => current.filter((dish) => dish.dishId !== dishId));\n    };\n    const addOptionToItem = (dishId: number, optionName: string) => {\n        if (!isSelected(dishId)) {\n            return;\n        }\n        const oldItem = getItem(dishId);\n        if (oldItem) {\n            const hasOption = Boolean(\n                oldItem.options?.find((aOption) => aOption.name === optionName)\n            );\n            if (!hasOption) {\n                removeFromOrder(dishId);\n                setOrderItems((current) => [\n                    { dishId, options: [{ name: optionName }, ...oldItem.options!] },\n                    ...current,\n                ]);\n            }\n        }\n    };\n    const getOptionFromItem = (item: CreateOrderItemInput, optionName: string) => {\n        return item.options?.find((option) => option.name === optionName);\n    };\n    const isOptionSelected = (dishId: number, optionName: string) => {\n        const item = getItem(dishId);\n        if (item) {\n            return Boolean(getOptionFromItem(item, optionName));\n        }\n        return false;\n    };\n    const removeOptionFromItem = (dishId: number, optionName: string) => {\n        if (!isSelected(dishId)) {\n            return;\n        }\n        const oldItem = getItem(dishId);\n        if (oldItem) {\n            removeFromOrder(dishId);\n            setOrderItems((current) => [\n                {\n                    dishId,\n                    options: oldItem.options?.filter((option) => option.name !== optionName),\n                },\n                ...current,\n            ]);\n            return oldItem.options?.filter((option) => option.name !== optionName);\n        }\n    };\n    const triggerCancelOrder = () => {\n        setOrderStarted(false);\n        setOrderItems([]);\n    };\n    const history = useHistory();\n    const onCompleted = (data: createOrder) => {\n        const {\n            createOrder: { ok, orderId },\n        } = data;\n        if (data.createOrder.ok) {\n            history.push(`/orders/${orderId}`);\n        }\n    };\n    const [createOrderMutation, { loading: placingOrder }] = useMutation<\n        createOrder,\n        createOrderVariables\n    >(CREATE_ORDER_MUTATION, {\n        onCompleted,\n    });\n    const triggerConfirmOrder = () => {\n\t\tif(placingOrder) {\n\t\t\treturn;\n\t\t}\n        if (orderItems.length === 0) {\n            alert(\"Can't place emty order\");\n            return;\n        }\n        const ok = window.confirm('You are about to place an order');\n        if (ok) {\n            createOrderMutation({\n                variables: {\n                    input: {\n                        restaurantId: +params.id,\n                        items: orderItems,\n                    },\n                },\n            });\n        }\n    };\n    console.log(orderItems);\n    return (\n        <div>\n            <Helmet>\n                <title>{data?.restaurant.restaurant?.name || ''} | Uber Eats</title>\n            </Helmet>\n            <div\n                className=\"bg-gray-800 bg-center bg-cover py-48\"\n                style={{ backgroundImage: `url(${data?.restaurant.restaurant?.coverImg})` }}\n            >\n                <div className=\"bg-white w-3/12 py-8 pl-48\">\n                    <h4 className=\"text-4xl mb-3\">{data?.restaurant.restaurant?.name}</h4>\n                    <h5 className=\"text-sm font-light mb-2\">\n                        {data?.restaurant.restaurant?.category?.name}\n                    </h5>\n                    <h6 className=\"text-sm font-light\">{data?.restaurant.restaurant?.address}</h6>\n                </div>\n            </div>\n            <div className=\"container flex flex-col items-end mt-20 mb-20\">\n                {!orderStarted && (\n                    <button onClick={triggerStartOrder} className=\"btn px-10\">\n                        Start Order\n                    </button>\n                )}\n                {orderStarted && (\n                    <div className=\"flex items-center\">\n                        <button onClick={triggerConfirmOrder} className=\"btn px-10 mr-3\">\n                            Confirm Order\n                        </button>\n                        <button\n                            onClick={triggerCancelOrder}\n                            className=\"btn px-10 bg-black hover:bg-black\"\n                        >\n                            Cancel Order\n                        </button>\n                    </div>\n                )}\n                <div className=\"w-full grid mt-16 md:grid-cols-3 gap-x-5 gap-y-10\">\n                    {data?.restaurant.restaurant?.menu?.map((dish, index) => (\n                        <Dish\n                            isSelected={isSelected(dish.id)}\n                            id={dish.id}\n                            key={index}\n                            name={dish.name}\n                            description={dish.description}\n                            price={dish.price}\n                            isCustomer={true}\n                            options={dish.options}\n                            orderStarted={orderStarted}\n                            addItemToOrder={addItemToOrder}\n                            removeFromOrder={removeFromOrder}\n                        >\n                            {dish.options?.map((option, index) => (\n                                <DishOption\n                                    key={index}\n                                    dishId={dish.id}\n                                    isSelected={isOptionSelected(dish.id, option.name)}\n                                    name={option.name}\n                                    extra={option.extra}\n                                    addOptionToItem={addOptionToItem}\n                                    removeOptionFromItem={removeOptionFromItem}\n                                />\n                            ))}\n                        </Dish>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};","/workspace/WebProject/uber_eats/uber_eats_frontend/src/components/app.tsx",[],"/workspace/WebProject/uber_eats/uber_eats_frontend/src/pages/owner/my-restaurants.tsx",[],"/workspace/WebProject/uber_eats/uber_eats_frontend/src/pages/owner/add-restaurants.tsx",["147"],"import { gql, useMutation, useApolloClient } from '@apollo/client';\nimport React, { useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useForm } from 'react-hook-form';\nimport { Button } from '../../components/button';\nimport { FormError } from '../../components/form-error';\nimport { createRestaurant, createRestaurantVariables } from '../../__generated__/createRestaurant';\nimport { MY_RESTAURANTS_QUERY } from './my-restaurants';\nimport { useHistory } from 'react-router-dom';\n\nconst CREATE_RESTAURANT_MUTATION = gql`\n\tmutation createRestaurant($input: CreateRestaurantInput!) {\n\t\tcreateRestaurant(input: $input) {\n\t\t\tok\n\t\t\terror\n\t\t\trestaurantId\n\t\t}\n\t}\n`;\n\ninterface IFormProps {\n    name: string;\n    address: string;\n    categoryName: string;\n    file: FileList;\n}\n\nexport const AddRestaurant = () => {\n    const client = useApolloClient();\n    const history = useHistory();\n    const [imageUrl, setImageUrl] = useState('');\n    const onCompleted = (data: createRestaurant) => {\n        const {\n            createRestaurant: { ok, restaurantId },\n        } = data;\n        if (ok) {\n            const { file, name, categoryName, address } = getValues();\n            setUploading(false);\n            const queryResult = client.readQuery({ query: MY_RESTAURANTS_QUERY });\n            client.writeQuery({\n                query: MY_RESTAURANTS_QUERY,\n                data: {\n                    myRestaurants: {\n                        ...queryResult.myRestaurants,\n                        restaurants: [\n                            {\n                                address,\n                                category: {\n                                    name: categoryName,\n                                    __typename: 'Category',\n                                },\n                                coverImg: imageUrl,\n                                id: restaurantId,\n                                isPromoted: false,\n                                name,\n                                __typename: 'Restaurant',\n                            },\n                            ...queryResult.myRestaurants.restaurants,\n                        ],\n                    },\n                },\n            });\n            history.push('/');\n        }\n    };\n    const [createRestaurantMutation, { data }] = useMutation<\n        createRestaurant,\n        createRestaurantVariables\n    >(CREATE_RESTAURANT_MUTATION, {\n        onCompleted,\n    });\n    const { register, getValues, formState, handleSubmit, watch } = useForm<IFormProps>({\n        mode: 'onChange',\n    });\n    watch();\n    const [uploading, setUploading] = useState(false);\n    const onSubmit = async () => {\n        try {\n            setUploading(true);\n            const { file, name, categoryName, address } = getValues();\n            const actualFile = file[0];\n            const formBody = new FormData();\n            formBody.append('file', actualFile);\n            const { url: coverImg } = await (\n                await fetch('https://bycproject.run.goorm.io/uploads/', {\n                    method: 'POST',\n                    body: formBody,\n                })\n            ).json();\n            setImageUrl(coverImg);\n            createRestaurantMutation({\n                variables: {\n                    input: {\n                        name,\n                        categoryName,\n                        address,\n                        coverImg,\n                    },\n                },\n            });\n        } catch (e) {}\n    };\n    return (\n        <div className=\"container flex flex-col items-center mt-52\">\n            <Helmet>Add Restaurant | Uber Eats</Helmet>\n            <h4 className=\"font-semibold text-2xl mb-3\">Add Restaurant</h4>\n            <form\n                onSubmit={handleSubmit(onSubmit)}\n                className=\"grid max-w-screen-sm gap-3 mt-5 w-full mb-5\"\n            >\n                <input\n                    className=\"input\"\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Name\"\n                    ref={register({ required: 'Name is required' })}\n                />\n                <input\n                    className=\"input\"\n                    type=\"text\"\n                    name=\"address\"\n                    placeholder=\"Address\"\n                    ref={register({ required: 'Address is required' })}\n                />\n                <input\n                    className=\"input\"\n                    type=\"text\"\n                    name=\"categoryName\"\n                    placeholder=\"CategoryName\"\n                    ref={register({ required: 'CategoryName is required' })}\n                />\n                <div>\n                    <input\n                        type=\"file\"\n                        name=\"file\"\n                        accept=\"image/*\"\n                        ref={register({ required: true })}\n                    />\n                </div>\n                <Button\n                    loading={uploading}\n                    canClick={formState.isValid}\n                    actionText=\"Create Restaurant\"\n                />\n                {data?.createRestaurant?.error && (\n                    <FormError errorMessage={data.createRestaurant.error} />\n                )}\n            </form>\n        </div>\n    );\n};","/workspace/WebProject/uber_eats/uber_eats_frontend/src/pages/owner/my-restaurant.tsx",["148","149"],"import { gql, useQuery, useSubscription } from '@apollo/client';\nimport React, { useEffect } from 'react';\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport {\n    DISH_FRAGMENT,\n    RESTAURANT_FRAGMENT,\n    ORDERS_FRAGMENT,\n    FULL_ORDER_FRAGMENT,\n} from '../../fragments';\nimport { myRestaurant, myRestaurantVariables } from '../../__generated__/myRestaurant';\nimport { pendingOrders } from '../../__generated__/pendingOrders';\nimport { Dish } from '../../components/dish';\nimport {\n    VictoryAxis,\n    VictoryChart,\n    VictoryLine,\n    VictoryZoomContainer,\n    VictoryLabel,\n    VictoryTooltip,\n    VictoryTheme,\n} from 'victory';\n\nexport const MY_RESTAURANT_QUERY = gql`\n\tquery myRestaurant($input: MyRestaurantInput!) {\n\t\tmyRestaurant(input: $input) {\n\t\t\tok\n\t\t\terror\n\t\t\trestaurant {\n\t\t\t\t...RestaurantParts\n\t\t\t\tmenu {\n\t\t\t\t\t...DishParts\n\t\t\t\t}\n\t\t\t\torders {\n\t\t\t\t\t...OrderParts\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t${RESTAURANT_FRAGMENT}\n\t${DISH_FRAGMENT}\n\t${ORDERS_FRAGMENT}\n`;\n\nconst PENDING_ORDERS_SUBSCRIPTION = gql`\n\tsubscription pendingOrders {\n\t\tpendingOrders {\n\t\t\t...FullOrderParts\n\t\t}\n\t}\n\t${FULL_ORDER_FRAGMENT}\n`;\n\ninterface IParams {\n    id: string;\n}\n\nexport const MyRestaurant = () => {\n    const { id } = useParams();\n    const { data } = useQuery<myRestaurant, myRestaurantVariables>(MY_RESTAURANT_QUERY, {\n        variables: {\n            input: {\n                id: +id,\n            },\n        },\n    });\n\n    const { data: subscriptionData } = useSubscription<pendingOrders>(PENDING_ORDERS_SUBSCRIPTION);\n    const history = useHistory();\n    useEffect(() => {\n        if (subscriptionData?.pendingOrders.id) {\n            history.push(`/orders/${subscriptionData.pendingOrders.id}`);\n        }\n    }, [subscriptionData]);\n\n    return (\n        <div>\n            <Helmet>\n                <title>{data?.myRestaurant.restaurant?.name || 'Loading...'} | Uber Eats</title>\n            </Helmet>\n            <div\n                className=\"bg-gray-700  py-28 bg-center bg-cover\"\n                style={{ backgroundImage: `url(${data?.myRestaurant.restaurant?.coverImg})` }}\n            ></div>\n            <div className=\"container mt-10\">\n                <h2 className=\"text-4xl font-medium mb-10\">\n                    {data?.myRestaurant.restaurant?.name || 'Loading...'}\n                </h2>\n                <Link\n                    to={`/restaurants/${id}/add-dish`}\n                    className=\" mr-8 text-white bg-gray-800 py-3 px-10\"\n                >\n                    Add Dish &rarr;\n                </Link>\n                <Link to={``} className=\" text-white bg-lime-700 py-3 px-10\">\n                    Buy Promotion &rarr;\n                </Link>\n                <div className=\"mt-10\">\n                    {data?.myRestaurant.restaurant?.menu?.length === 0 ? (\n                        <h4 className=\"text-xl mb-5\">Please upload a dish!</h4>\n                    ) : (\n                        <div className=\"grid mt-16 md:grid-cols-3 gap-x-5 gap-y-10\">\n                            {data?.myRestaurant.restaurant?.menu?.map((dish) => (\n                                <Dish\n                                    name={dish.name}\n                                    description={dish.description}\n                                    price={dish.price}\n                                />\n                            ))}\n                        </div>\n                    )}\n                </div>\n                <div className=\"mt-20 mb-10\">\n                    <h4 className=\"text-center text-2xl font-medium\">Sales</h4>\n                    <div className=\"mt-10\">\n                        <VictoryChart\n                            width={window.innerWidth}\n                            height={500}\n                            domainPadding={50}\n                            theme={VictoryTheme.material}\n                            containerComponent={<VictoryZoomContainer />}\n                        >\n                            <VictoryLine\n                                labels={({ datum }) => `$${datum.y}`}\n                                labelComponent={\n                                    <VictoryTooltip\n                                        style={{ fontSize: 18 } as any}\n                                        renderInPortal\n                                        dy={-20}\n                                    />\n                                }\n                                data={data?.myRestaurant.restaurant?.orders.map((order) => ({\n                                    x: order.createdAt,\n                                    y: order.total,\n                                }))}\n                                interpolation=\"natural\"\n                                style={{\n                                    data: {\n                                        strokeWidth: 5,\n                                    },\n                                }}\n                            />\n                            <VictoryAxis\n                                tickLabelComponent={<VictoryLabel renderInPortal />}\n                                style={{\n                                    tickLabels: {\n                                        fontSize: 20,\n                                    } as any,\n                                }}\n                                tickFormat={(tick) => new Date(tick).toLocaleDateString('ko')}\n                            />\n                        </VictoryChart>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};","/workspace/WebProject/uber_eats/uber_eats_frontend/src/pages/owner/add-dish.tsx",[],"/workspace/WebProject/uber_eats/uber_eats_frontend/src/components/dish.tsx",[],"/workspace/WebProject/uber_eats/uber_eats_frontend/src/components/dish-option.tsx",[],"/workspace/WebProject/uber_eats/uber_eats_frontend/src/pages/order.tsx",["150","151","152"],"/workspace/WebProject/uber_eats/uber_eats_frontend/src/pages/driver/dashboard.tsx",["153","154","155","156","157"],"import { gql, useSubscription, useMutation } from '@apollo/client';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport GoogleMapReact from 'google-map-react';\nimport { FULL_ORDER_FRAGMENT } from '../../fragments';\nimport { cookedOrders } from '../../__generated__/cookedOrders';\nimport { takeOrder, takeOrderVariables } from '../../__generated__/takeOrder';\n\n\nconst COOKED_ORDERS_SUBSCRIPTION = gql`\n\tsubscription cookedOrders {\n\t\tcookedOrders {\n\t\t\t...FullOrderParts\n\t\t}\n\t}\n\t${FULL_ORDER_FRAGMENT}\n`;\n\nconst TAKE_ORDER_MUTATION = gql`\n\tmutation takeOrder($input: TakeOrderInput!) {\n\t\ttakeOrder(input: $input) {\n\t\t\tok\n\t\t\terror\n\t\t}\n\t}\n`;\n\ninterface ICoords {\n    lat: number;\n    lng: number;\n}\n\ninterface IDriverProps {\n    lat: number;\n    lng: number;\n    $hover?: any;\n}\n\nconst Driver: React.FC<IDriverProps> = () => <div className=\"text-lg\">Car</div>;\n\nexport const Dashboard = () => {\n    const [driverCoords, setDriverCoords] = useState<ICoords>({ lat: 0, lng: 0 });\n    const [map, setMap] = useState<google.maps.Map>();\n    const [maps, setMaps] = useState<any>();\n    const onSuccess = ({ coords: { latitude, longitude } }: GeolocationPosition) => {\n        setDriverCoords({ lat: latitude, lng: longitude });\n        console.log(driverCoords);\n    };\n    const onError = (error: GeolocationPositionError) => {\n        console.log(error);\n    };\n    useEffect(() => {\n        navigator.geolocation.watchPosition(onSuccess, onError, {\n            enableHighAccuracy: true,\n        });\n    }, []);\n    useEffect(() => {\n        if (map && maps) {\n            map.panTo(new google.maps.LatLng(driverCoords.lat, driverCoords.lng));\n            /* const geocoder = new google.maps.Geocoder();\n\t\t\t  geocoder.geocode(\n\t\t\t\t{\n\t\t\t\t  location: new google.maps.LatLng(driverCoords.lat, driverCoords.lng),\n\t\t\t\t},\n\t\t\t\t(results, status) => {\n\t\t\t\t  console.log(status, results);\n\t\t\t\t}\n\t\t\t  ); */\n        }\n    }, [driverCoords.lat, driverCoords.lng]);\n    const onApiLoaded = ({ map, maps }: { map: any; maps: any }) => {\n        map.panTo(new maps.LatLng(driverCoords.lat, driverCoords.lng));\n        setMap(map);\n        setMaps(maps);\n    };\n\tconst makeRoute = () => {\n\t\tif(map) {\n\t\t\tconst directionService = new google.maps.DirectionsService();\n\t\t\tconst directionRenderer = new google.maps.DirectionsRenderer({\n\t\t\t\tpolylineOptions: {\n\t\t\t\t\tstrokeColor: \"#000\",\n\t\t\t\t\tstrokeOpacity: 1,\n\t\t\t\t\tstrokeWeight: 5,\n\t\t\t\t},\n\t\t\t});\n\t\t\tdirectionRenderer.setMap(map);\n\t\t\tdirectionService.route(\n\t\t\t\t{\n\t\t\t\t\torigin: {\n\t\t\t\t\t\tlocation: new google.maps.LatLng(\n\t\t\t\t\t\t\tdriverCoords.lat,\n\t\t\t\t\t\t\tdriverCoords.lng\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\tdestination: {\n\t\t\t\t\t\tlocation: new google.maps.LatLng(\n\t\t\t\t\t\t\tdriverCoords.lat + 0.05,\n\t\t\t\t\t\t\tdriverCoords.lng + 0.05\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\ttravelMode: google.maps.TravelMode.DRIVING,\n\t\t\t\t},\n\t\t\t\t(result) => {\n\t\t\t\t\tdirectionRenderer.setDirections(result);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t};\n\tconst { data: cookedOrdersData } = useSubscription<cookedOrders>(COOKED_ORDERS_SUBSCRIPTION);\n\tuseEffect(() => {\n\t\tif(cookedOrdersData?.cookedOrders.id) {\n\t\t\tmakeRoute();   \n\t\t}\n\t}, [cookedOrdersData]);\n\tconst history = useHistory();\n\tconst onCompleted = (data: takeOrder) => {\n\t\tif(data.takeOrder.ok) {\n\t\t\thistory.push(`/orders/${cookedOrdersData?.cookedOrders.id}`);\n\t\t}\n\t}\n\tconst [ takeOrderMutation ] = useMutation<\n\t\ttakeOrder,\n\t\ttakeOrderVariables\n\t>(TAKE_ORDER_MUTATION, {\n\t\tonCompleted,\n\t});\n\tconst triggerMutation = (orderId: number) => {\n\t\ttakeOrderMutation({\n\t\t\tvariables: {\n\t\t\t\tinput: {\n\t\t\t\t\tid: orderId,\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t};\n    return (\n        <div>\n            <div className=\"overflow-hidden\" style={{ width: window.innerWidth, height: '50vh' }}>\n                <GoogleMapReact\n                    yesIWantToUseGoogleMapApiInternals\n                    onGoogleApiLoaded={onApiLoaded}\n                    defaultZoom={16}\n\t\t\t\t\tdraggable={true}\n                    defaultCenter={{\n                        lat: 36.58,\n                        lng: 125.95,\n                    }}\n                    bootstrapURLKeys={{ key: 'AIzaSyC2Sg0Ut62Ncm2_aLDNPKxZbvapZ9835FA' }}\n                >\n                </GoogleMapReact>\n            </div>\n\t\t\t<div className=\"max-w-screen-sm mx-auto bg-white relative -top-10 shadow-lg py-8 px-5\">\n\t\t\t\t{cookedOrdersData?.cookedOrders.restaurant ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<h1 className=\"text-center text-3xl font-medium\">\n\t\t\t\t\t\t\tNew Cooked Order\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t<h1 className=\"text-center my-3  text-2xl font-medium\">\n\t\t\t\t\t\t\tPick it up soon @{\" \"}\n\t\t\t\t\t\t\t{cookedOrdersData?.cookedOrders.restaurant?.name}\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t<button \n\t\t\t\t\t\t\tonClick={() => triggerMutation(cookedOrdersData?.cookedOrders.id)}\n\t\t\t\t\t\t\tclassName=\"btn w-full block text-center mt-5\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tAccept Challenge &rarr;\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<h1 className=\"text-center text-3xl font-medium\">\n\t\t\t\t\t\tNo orders yet...\n\t\t\t\t\t</h1>\n\t\t\t\t)}\n\t\t\t</div>\n        </div>\n    );\n};",{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":58,"column":10,"nodeType":"164","messageId":"165","endLine":58,"endColumn":14},{"ruleId":"162","severity":1,"message":"166","line":58,"column":16,"nodeType":"164","messageId":"165","endLine":58,"endColumn":23},{"ruleId":"167","severity":1,"message":"168","line":14,"column":2,"nodeType":"169","endLine":21,"endColumn":3},{"ruleId":"162","severity":1,"message":"170","line":42,"column":28,"nodeType":"164","messageId":"165","endLine":42,"endColumn":33},{"ruleId":"162","severity":1,"message":"171","line":44,"column":16,"nodeType":"164","messageId":"165","endLine":44,"endColumn":17},{"ruleId":"162","severity":1,"message":"172","line":27,"column":15,"nodeType":"164","messageId":"165","endLine":27,"endColumn":22},{"ruleId":"162","severity":1,"message":"171","line":33,"column":10,"nodeType":"164","messageId":"165","endLine":33,"endColumn":11},{"ruleId":"173","severity":1,"message":"174","line":45,"column":5,"nodeType":"175","endLine":45,"endColumn":24,"suggestions":"176"},{"ruleId":"162","severity":1,"message":"177","line":27,"column":11,"nodeType":"164","messageId":"165","endLine":27,"endColumn":26},{"ruleId":"162","severity":1,"message":"178","line":39,"column":11,"nodeType":"164","messageId":"165","endLine":39,"endColumn":28},{"ruleId":"162","severity":1,"message":"179","line":46,"column":13,"nodeType":"164","messageId":"165","endLine":46,"endColumn":20},{"ruleId":"162","severity":1,"message":"180","line":125,"column":28,"nodeType":"164","messageId":"165","endLine":125,"endColumn":30},{"ruleId":"162","severity":1,"message":"181","line":37,"column":21,"nodeType":"164","messageId":"165","endLine":37,"endColumn":25},{"ruleId":"162","severity":1,"message":"182","line":54,"column":11,"nodeType":"164","messageId":"165","endLine":54,"endColumn":18},{"ruleId":"173","severity":1,"message":"183","line":74,"column":8,"nodeType":"175","endLine":74,"endColumn":26,"suggestions":"184"},{"ruleId":"162","severity":1,"message":"185","line":1,"column":38,"nodeType":"164","messageId":"165","endLine":1,"endColumn":53},{"ruleId":"162","severity":1,"message":"186","line":6,"column":24,"nodeType":"164","messageId":"165","endLine":6,"endColumn":45},{"ruleId":"173","severity":1,"message":"187","line":79,"column":5,"nodeType":"175","endLine":79,"endColumn":11,"suggestions":"188"},{"ruleId":"162","severity":1,"message":"189","line":3,"column":10,"nodeType":"164","messageId":"165","endLine":3,"endColumn":14},{"ruleId":"162","severity":1,"message":"190","line":39,"column":7,"nodeType":"164","messageId":"165","endLine":39,"endColumn":37},{"ruleId":"173","severity":1,"message":"191","line":56,"column":8,"nodeType":"175","endLine":56,"endColumn":10,"suggestions":"192"},{"ruleId":"173","severity":1,"message":"193","line":70,"column":8,"nodeType":"175","endLine":70,"endColumn":44,"suggestions":"194"},{"ruleId":"173","severity":1,"message":"195","line":114,"column":5,"nodeType":"175","endLine":114,"endColumn":23,"suggestions":"196"},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"@typescript-eslint/no-unused-vars","'test' is assigned a value but never used.","Identifier","unusedVar","'setTest' is assigned a value but never used.","jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","'error' is assigned a value but never used.","'_' is assigned a value but never used.","'setPage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'callQuery' and 'page'. Either include them or remove the dependency array.","ArrayExpression",["199"],"'ICategoryParams' is defined but never used.","'IRestaurantParams' is defined but never used.","'loading' is assigned a value but never used.","'ok' is assigned a value but never used.","'file' is assigned a value but never used.","'IParams' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["200"],"'useSubscription' is defined but never used.","'orderUpdatesVariables' is defined but never used.","React Hook useEffect has missing dependencies: 'params.id' and 'subscribeToMore'. Either include them or remove the dependency array.",["201"],"'Link' is defined but never used.","'Driver' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onSuccess'. Either include it or remove the dependency array.",["202"],"React Hook useEffect has missing dependencies: 'map' and 'maps'. Either include them or remove the dependency array.",["203"],"React Hook useEffect has a missing dependency: 'makeRoute'. Either include it or remove the dependency array.",["204"],"no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},"Update the dependencies array to be: [callQuery, history, location, page]",{"range":"217","text":"218"},"Update the dependencies array to be: [history, subscriptionData]",{"range":"219","text":"220"},"Update the dependencies array to be: [data, params.id, subscribeToMore]",{"range":"221","text":"222"},"Update the dependencies array to be: [onSuccess]",{"range":"223","text":"224"},"Update the dependencies array to be: [driverCoords.lat, driverCoords.lng, map, maps]",{"range":"225","text":"226"},"Update the dependencies array to be: [cookedOrdersData, makeRoute]",{"range":"227","text":"228"},[1151,1170],"[callQuery, history, location, page]",[1772,1790],"[history, subscriptionData]",[1898,1904],"[data, params.id, subscribeToMore]",[1560,1562],"[onSuccess]",[1966,2002],"[driverCoords.lat, driverCoords.lng, map, maps]",[3127,3145],"[cookedOrdersData, makeRoute]"]